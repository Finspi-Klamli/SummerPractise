plugins {
    id 'io.jmix' version '1.2.0'
    id 'java'
}

apply plugin: 'org.springframework.boot'

jmix {
    bomVersion = '1.2.4.trial'
}

group = 'com.belov'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url 'https://nexus.jmix.io/repository/public'
    }
    maven {
        url = 'file:/C:/Users/Finspi%20Klamli/IdeaProjects/SummerPractise/trial_repository/'
    }
    maven {
        url = 'file:/C:/Users/Finspi%20Klamli/IdeaProjects/SummerPractise/trial_repository/'
    }
}

dependencies {
    implementation 'io.jmix.core:jmix-core-starter'
    implementation 'io.jmix.data:jmix-eclipselink-starter'
    implementation 'io.jmix.ui:jmix-ui-starter'
    implementation 'io.jmix.ui:jmix-ui-data-starter'
    implementation 'io.jmix.ui:jmix-ui-themes-compiled'
    implementation 'io.jmix.security:jmix-security-starter'
    implementation 'io.jmix.security:jmix-security-ui-starter'
    implementation 'io.jmix.security:jmix-security-data-starter'
    implementation 'io.jmix.localfs:jmix-localfs-starter'
    implementation 'io.jmix.datatools:jmix-datatools-starter'
    implementation 'io.jmix.datatools:jmix-datatools-ui-starter'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    runtimeOnly 'org.postgresql:postgresql:42.2.5'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    implementation("io.jmix.maps:jmix-maps-ui-starter")
    implementation("io.jmix.maps:jmix-maps-starter")
    widgets("io.jmix.maps:jmix-maps-ui-widgets")
    widgets("io.jmix.ui:jmix-ui-widgets")
    implementation("io.jmix.maps:jmix-maps-starter")
    implementation("io.jmix.maps:jmix-maps-ui-starter")
    widgets("io.jmix.maps:jmix-maps-ui-widgets")
    widgets("io.jmix.ui:jmix-ui-widgets")
    implementation("io.jmix.translations:jmix-translations-ru")
    implementation("io.jmix.translations:jmix-translations-ru")
    implementation("io.jmix.translations:jmix-translations-ru")
}

test {
    useJUnitPlatform()
}

compileWidgets {
    generate "com.belov.jmixapplication.widgets.CustomWidgetSet"
    includePaths("**/io/jmix/**/widget/**", "**/com/belov/jmixapplication/widgets/**")
}